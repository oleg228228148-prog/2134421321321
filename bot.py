from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import logging
from flask import Flask
from threading import Thread
import os

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏, –Ω–µ —Ö—Ä–∞–Ω–∏—Ç –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# ‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò
TOKEN = "8320394259:AAFvODL3IxxehnmAfozR0mSY8VJI9b_tbwU"  # üëà –ó–ê–ú–ï–ù–ò –ù–ê –¢–û–ö–ï–ù –û–¢ @BotFather

# üß† –•—Ä–∞–Ω–∏–ª–∏—â–µ: —Ç–æ–ª—å–∫–æ ID —á–∞—Ç–æ–≤, –∫—É–¥–∞ –º–æ–∂–Ω–æ —Ä–∞—Å—Å—ã–ª–∞—Ç—å
subscribers = set()

# üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏ "Port scan timeout")
app = Flask(__name__)

@app.route('/')
def home():
    return "üöÄ –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç-–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7", 200

def run_web():
    port = int(os.environ.get('PORT', 10000))  # Render —Ç—Ä–µ–±—É–µ—Ç PORT
    app.run(host='0.0.0.0', port=port)

def keep_alive():
    t = Thread(target=run_web)
    t.start()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    subscribers.add(chat_id)
    await update.message.reply_text(
        "üîÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *–ê–±—Å–æ–ª—é—Ç–Ω–æ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ß–∞—Ç*.\n\n"
        "üì© –ü–∏—à–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ ‚Äî —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏.\n"
        "üë§ –ù–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–µ—Ç, –∫—Ç–æ –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏–ª. –î–∞–∂–µ –∞–¥–º–∏–Ω.\n"
        "üö´ –ù–∏–∫–∞–∫–∏—Ö –∏–º—ë–Ω, ID, –º–µ—Ç–æ–∫. –¢–æ–ª—å–∫–æ —Ç–≤–æ–∏ —Å–ª–æ–≤–∞.\n\n"
        "–ì–æ—Ç–æ–≤? –ü–∏—à–∏ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üëá",
        parse_mode="Markdown"
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    subscribers.add(chat_id)  # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    if update.message.text:
        content = update.message.text
        is_voice = False
    elif update.message.voice:
        content = update.message.voice.file_id
        is_voice = True
    else:
        await update.message.reply_text("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        return

    # –†–∞—Å—Å—ã–ª–∞–µ–º –í–°–ï–ú (–≤–∫–ª—é—á–∞—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ‚Äî –¥–ª—è –æ—â—É—â–µ–Ω–∏—è —á–∞—Ç–∞)
    broadcast_text = "üì© –ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:" if not is_voice else "üì© –ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ:"

    success_count = 0
    failed_ids = set()

    for target_id in list(subscribers):  # –∫–æ–ø–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
        try:
            await context.bot.send_message(chat_id=target_id, text=broadcast_text)
            if is_voice:
                await context.bot.send_voice(chat_id=target_id, voice=content)
            else:
                await context.bot.send_message(chat_id=target_id, text=content)
            success_count += 1
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {target_id}: {e}")
            failed_ids.add(target_id)

    # –£–¥–∞–ª—è–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö (–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –±–æ—Ç–∞ –∏ —Ç.–ø.)
    for bad_id in failed_ids:
        subscribers.discard(bad_id)

    await update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ –≤—Å–µ–º.")

def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –î–û –±–æ—Ç–∞
    keep_alive()

    application = Application.builder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT | filters.VOICE, handle_message))

    logger.info("üöÄ –ê–±—Å–æ–ª—é—Ç–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç –∞–≤—Ç–æ—Ä–∞ ‚Äî –¥–∞–∂–µ –∞–¥–º–∏–Ω.")
    application.run_polling()

if __name__ == '__main__':
    main()
